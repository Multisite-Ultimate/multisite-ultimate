#!/bin/bash

# Pre-commit hook for running phpcs and phpstan on changed files
# This hook runs PHPCS and PHPStan on staged PHP files

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Running pre-commit checks...${NC}"

# Get list of staged PHP files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.php$' | grep -v '^vendor/' | grep -v '^tests/' || true)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}No PHP files to check.${NC}"
    exit 0
fi

echo -e "${YELLOW}Checking PHP files:${NC}"
echo "$STAGED_FILES"

# Check if composer dependencies are installed
if [ ! -f "vendor/bin/phpcs" ] || [ ! -f "vendor/bin/phpstan" ]; then
    echo -e "${RED}Error: Please run 'composer install' to install development dependencies.${NC}"
    exit 1
fi

# Run PHPCS on staged files
echo -e "${YELLOW}Running PHPCS...${NC}"
HAS_PHPCS_ERRORS=0
for FILE in $STAGED_FILES; do
    if [ -f "$FILE" ]; then
        vendor/bin/phpcs --colors "$FILE" || HAS_PHPCS_ERRORS=1
    fi
done

# Run PHPStan on staged files
echo -e "${YELLOW}Running PHPStan...${NC}"
HAS_PHPSTAN_ERRORS=0
PHPSTAN_FILES=""
for FILE in $STAGED_FILES; do
    if [ -f "$FILE" ] && [[ "$FILE" =~ ^inc/ ]]; then
        PHPSTAN_FILES="$PHPSTAN_FILES $FILE"
    fi
done

if [ -n "$PHPSTAN_FILES" ]; then
    vendor/bin/phpstan analyse --no-progress --error-format=table $PHPSTAN_FILES || HAS_PHPSTAN_ERRORS=1
fi

# Exit with error if any checks failed
if [ $HAS_PHPCS_ERRORS -ne 0 ] || [ $HAS_PHPSTAN_ERRORS -ne 0 ]; then
    echo -e "${RED}Pre-commit checks failed!${NC}"
    echo -e "${YELLOW}To bypass these checks, use: git commit --no-verify${NC}"
    exit 1
fi

echo -e "${GREEN}All pre-commit checks passed!${NC}"
exit 0